services:
  app:
    build:
      dockerfile: Dockerfile
    container_name: socialapp
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - elk

  db:
    image: mysql:8.0
    container_name: socialapp-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: socialapp_db
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - elk
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      retries: 5
      start_period: 20s

  elasticsearch:
    build:
      context: "./elk/elasticsearch/"
      dockerfile: Dockerfile
    volumes:
      - type: bind
        source: "./elk/elasticsearch/config/elasticsearch.yml"
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - "./elk/elasticsearch/data:/var/lib/elasticsearch/data"
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: elastic
      discovery.type: single-node
      xpack.security.enabled: false
    networks:
      - elk

  logstash:
    build:
      context: "./elk/logstash/"
      dockerfile: Dockerfile
    volumes:
      - type: bind
        source: "./elk/logstash/config/logstash.yml"
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: "./elk/logstash/pipeline"
        target: /usr/share/logstash/pipeline
        read_only: true
      - type: bind
        source: "./logs"
        target: /usr/share/logstash/logs
        read_only: true
    ports:
      - "5001:5001/tcp"
      - "5001:5001/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: "./elk/kibana/"
      dockerfile: Dockerfile
    volumes:
      - type: bind
        source: "./elk/kibana/config/kibana.yml"
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    hostname: prometheus
    restart: always
    networks:
      - elk

networks:
  elk:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  prometheus_data:
    driver: local